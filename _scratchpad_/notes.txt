
# See: https://www.digitalocean.com/community/tutorials/how-to-benchmark-http-latency-with-wrk-on-ubuntu-14-04

wrk -t2 -c5 -d5s -H 'Host: example.com' --timeout 2s http://$APP1_PRIVATE_IP:3000/

wrk -t4 -c8 -d10s --timeout 2s http://0.0.0.0:3000

2016-10-04.23:26:drhuffman@drhuffman-Y700:~/_apps_/rubymine/bin/B:
$ wrk -t4 -c8 -d10s --timeout 2s http://0.0.0.0:3000
Running 10s test @ http://0.0.0.0:3000
  4 threads and 8 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency    72.85ms   10.78ms 135.56ms   76.90%
    Req/Sec    22.80      9.08    40.00     69.00%
  684 requests in 10.01s, 1.65MB read
Requests/sec:     68.31
Transfer/sec:    168.24KB

2016-10-04.23:29:drhuffman@drhuffman-Y700:~/_apps_/rubymine/bin/B:
$ wrk -t4 -c8 -d10s --timeout 2s http://0.0.0.0:3000
Running 10s test @ http://0.0.0.0:3000
  4 threads and 8 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency     1.95ms    2.31ms  20.70ms   85.17%
    Req/Sec     1.08k   331.17     1.57k    57.67%
  32221 requests in 10.02s, 4.15MB read
  Non-2xx or 3xx responses: 32221
Requests/sec:   3216.53
Transfer/sec:    424.05KB

----

bundle exec rails db:migrate
bundle exec rails db:seed

----


# Ruby/SQLite:

$ bundle exec rails db:seed
       user     system      total        real
max_words: 10, i: 0  0.480000   0.050000   0.530000 (  0.769009)
max_words: 100, i: 0 15.410000   2.380000  17.790000 ( 28.949784)
max_words: 1000, i: 0409.750000  38.200000 447.950000 (613.578952)
max_words: 10000, i: 0^Crails aborted!

# JRuby/SQLite:



# Ruby/Postgres (pool: 5):

$ bundle exec rails db:seed
       user     system      total        real
max_words: 10, i: 0  0.320000   0.010000   0.330000 (  0.443755)
max_words: 100, i: 0  8.230000   0.540000   8.770000 ( 12.898689)
max_words: 1000, i: 0345.250000  14.640000 359.890000 (479.207569)
max_words: 10000, i: 0^Crake aborted!

# Ruby/Postgres (pool: 10):

$ bundle exec rails db:seed
       user     system      total        real
max_words: 10, i: 0  0.290000   0.020000   0.310000 (  0.419929)
max_words: 100, i: 0  7.730000   0.510000   8.240000 ( 12.322213)
max_words: 1000, i: 0307.530000  13.800000 321.330000 (441.339873)
max_words: 10000, i: 0^Crake aborted!


# Ruby/Postgres (pool: 5, prod):

$ bundle exec rails db:seed
       user     system      total        real
max_words: 10, i: 0  0.350000   0.010000   0.360000 (  0.477628)
max_words: 100, i: 0  8.270000   0.550000   8.820000 ( 12.961581)
max_words: 1000, i: 0357.980000  17.020000 375.000000 (492.110968)
max_words: 10000, i: 0^Crake aborted!




# Ruby/Postgres (pool: 10, prod):

$ bundle exec rails db:seed
       user     system      total        real
max_words: 10, i: 0  0.330000   0.010000   0.340000 (  0.436286)
max_words: 100, i: 0  8.130000   0.480000   8.610000 ( 12.670269)
max_words: 1000, i: 0375.330000  17.820000 393.150000 (531.133448))
max_words: 10000, i: 0^Crake aborted!



# JRuby/Postgres:



----

sudo -u postgres psql

> create role levenshtein_rails with createdb login password 'levenshtein_rails_pw';
> create role drhuffman with createdb login password 'drhuffman_pw';

DISABLE_DATABASE_ENVIRONMENT_CHECK=1 RAILS_ENV=production bundle exec rake db:setup

--

cd ~/_dev_/levenshtein_rails

bundle exec rails g scaffold WordLength length:integer

# bundle exec rails g scaffold Histogram word:string length:integer word_length:references
# bundle exec rails g scaffold Histogram hist:store length:integer word_length:references
bundle exec rails g scaffold Histogram hist:text length:integer word_length:references

  store :hist, accessors: [ :color, :homepage ], coder: JSON
bundle exec rails g scaffold Word name:string length:integer word_length:references histogram:references

bundle exec rails g scaffold WordFriend word_from:references word_to:references traced_by:text traced_last_by:string

bundle exec rails g scaffold HistFriend hist_from:references hist_to:references traced_by:text traced_last_by:string

http://0.0.0.0:3000/

bundle exec rails g controller Home index

# bundle exec rails g scaffold SocialNet word_orig:references word_from:references word_to:references qty_steps:integer
bundle exec rails g scaffold SocialNode word_orig:references word_from:references word_to:references qty_steps:integer

----

class SocialNode < ApplicationRecord
  belongs_to :word_orig, autosave: true, class_name: "Word", counter_cache: true, inverse_of: :word_orig_soc_nodes
  belongs_to :word_from, autosave: true, class_name: "Word", counter_cache: true, inverse_of: :word_from_soc_nodes
  belongs_to :word_to, autosave: true, class_name: "Word", counter_cache: true, inverse_of: :word_to_soc_nodes
end

# belongs_to :hist_from, autosave: true, class_name: "Histogram", counter_cache: true, inverse_of: :hist_from_friends
# belongs_to :hist_to, autosave: true, class_name: "Histogram", counter_cache: true, inverse_of: :hist_to_friends
#
# belongs_to :word_from, autosave: true, class_name: "Word", counter_cache: true, inverse_of: :word_from_friends
# belongs_to :word_to, autosave: true, class_name: "Word", counter_cache: true, inverse_of: :word_to_friends
#
# has_many :word_orig_soc_nodes, inverse_of: :word_orig
# has_many :word_from_soc_nodes, inverse_of: :word_from
# has_many :word_to_soc_nodes, inverse_of: :word_to



----

class Histogram < ApplicationRecord
  belongs_to :word_length
  has_many :hist_from_friends, inverse_of: :hist_from
  has_many :hist_to_friends, inverse_of: :hist_too
end


rails generate migration add_email_to_users email:string

bundle exec rails generate migration add_from_length_to_hist_friends from_length:integer
bundle exec rails generate migration add_to_length_to_hist_friends to_length:integer

bundle exec rails generate migration add_from_length_to_word_friends from_length:integer
bundle exec rails generate migration add_to_length_to_word_friends to_length:integer

bundle exec rails generate migration add_comment_to_hist_friends comment:string
bundle exec rails generate migration add_comment_to_word_friends comment:string

bundle exec rails generate migration add_traversed_ids_to_words traversed_ids:string
bundle exec rails generate migration add_is_test_case_to_words is_test_case:string

bundle exec rails generate migration add_soc_net_size_to_words soc_net_size:integer
